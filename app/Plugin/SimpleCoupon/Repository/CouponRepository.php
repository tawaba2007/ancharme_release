<?php

namespace Plugin\SimpleCoupon\Repository;

use Doctrine\ORM\EntityRepository;
use Monolog\Logger;
use Eccube\Util\Str;

/**
 * CouponRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CouponRepository extends EntityRepository
{
	
	protected $app;
	
	public function setApplication($app)
	{
		$this->app = $app;
	}
	
	/**
	 *
	 * @param  array        $searchData
	 * @return QueryBuilder
	 */
	public function getQueryBuilderBySearchDataForAdmin($searchData)
	{
		$qb = $this->createQueryBuilder('c');
	
		// multi
		if (isset( $searchData['multi']) && Str::isNotBlank($searchData['multi'])) {
			
			$multi = preg_match('/^\d+$/', $searchData['multi']) ? $searchData['multi'] : null;
			if(!is_null($multi)){
				$qb
				->andWhere('c.couponId = :multi')
				->setParameter('multi', $multi);
			}else{
				$qb
				->andWhere('c.couponName LIKE :likemulti OR c.couponCode LIKE :likemulti')
				->setParameter('likemulti', '%' . $searchData['multi'] . '%');
			}
			
		}
		
		// status
		if (isset($searchData['status']) && strlen($searchData['status'])>0) {
			$qb
			->andWhere('c.status = :status')
			->setParameter('status', $searchData['status']);
		}
		
		// date
		if (!empty($searchData['date_start']) && $searchData['date_start']) {
			$date = $searchData['date_start']->format('Y-m-d H:i:s');
			$qb
			->andWhere('c.toDate >= :date_start Or c.toDate is null')
			->setParameter('date_start', $date);
		}
		
		if (!empty($searchData['date_end']) && $searchData['date_end']) {
			$date = clone $searchData['date_end'];
			$date = $date->modify('+1 days')->format('Y-m-d H:i:s');
			$qb
			->andWhere('c.fromDate < :date_end1')
			->setParameter('date_end1', $date)
			->andWhere('c.toDate >= :date_end2 Or c.toDate is null')
			->setParameter('date_end2', $date);
		}
	
		$qb
		->andWhere('c.delFlg = :del_flg')
		->setParameter('del_flg', 0);
		
		// Order By
		$qb->addOrderBy('c.couponId', 'DESC');
	
		return $qb;
	}
	
}
